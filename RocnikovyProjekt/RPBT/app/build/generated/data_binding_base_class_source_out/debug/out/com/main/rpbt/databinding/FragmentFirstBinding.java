// Generated by view binder compiler. Do not edit!
package com.main.rpbt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.SeekBar;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.main.rpbt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFirstBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button ButtonNext;

  @NonNull
  public final Button ButtonPrev;

  @NonNull
  public final Switch detected;

  @NonNull
  public final Switch distance;

  @NonNull
  public final SeekBar fpsBar;

  @NonNull
  public final TextView headerFirst;

  @NonNull
  public final TextView progressFPS;

  @NonNull
  public final SeekBar rotateBar;

  @NonNull
  public final Switch stats;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final View view;

  private FragmentFirstBinding(@NonNull ConstraintLayout rootView, @NonNull Button ButtonNext,
      @NonNull Button ButtonPrev, @NonNull Switch detected, @NonNull Switch distance,
      @NonNull SeekBar fpsBar, @NonNull TextView headerFirst, @NonNull TextView progressFPS,
      @NonNull SeekBar rotateBar, @NonNull Switch stats, @NonNull TextView textView2,
      @NonNull View view) {
    this.rootView = rootView;
    this.ButtonNext = ButtonNext;
    this.ButtonPrev = ButtonPrev;
    this.detected = detected;
    this.distance = distance;
    this.fpsBar = fpsBar;
    this.headerFirst = headerFirst;
    this.progressFPS = progressFPS;
    this.rotateBar = rotateBar;
    this.stats = stats;
    this.textView2 = textView2;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_first, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFirstBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ButtonNext;
      Button ButtonNext = ViewBindings.findChildViewById(rootView, id);
      if (ButtonNext == null) {
        break missingId;
      }

      id = R.id.ButtonPrev;
      Button ButtonPrev = ViewBindings.findChildViewById(rootView, id);
      if (ButtonPrev == null) {
        break missingId;
      }

      id = R.id.detected;
      Switch detected = ViewBindings.findChildViewById(rootView, id);
      if (detected == null) {
        break missingId;
      }

      id = R.id.distance;
      Switch distance = ViewBindings.findChildViewById(rootView, id);
      if (distance == null) {
        break missingId;
      }

      id = R.id.fpsBar;
      SeekBar fpsBar = ViewBindings.findChildViewById(rootView, id);
      if (fpsBar == null) {
        break missingId;
      }

      id = R.id.header_first;
      TextView headerFirst = ViewBindings.findChildViewById(rootView, id);
      if (headerFirst == null) {
        break missingId;
      }

      id = R.id.progressFPS;
      TextView progressFPS = ViewBindings.findChildViewById(rootView, id);
      if (progressFPS == null) {
        break missingId;
      }

      id = R.id.rotateBar;
      SeekBar rotateBar = ViewBindings.findChildViewById(rootView, id);
      if (rotateBar == null) {
        break missingId;
      }

      id = R.id.stats;
      Switch stats = ViewBindings.findChildViewById(rootView, id);
      if (stats == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new FragmentFirstBinding((ConstraintLayout) rootView, ButtonNext, ButtonPrev, detected,
          distance, fpsBar, headerFirst, progressFPS, rotateBar, stats, textView2, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
